package FrontEnd;


import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;
import BackEnd.InsertUpdateDelete;
import BackEnd.Select;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Geff
 */
public class addSales_Dashboard extends javax.swing.JFrame {

    /**
     * Creates new form addSales
     */
    public addSales_Dashboard() {
        initComponents();
        jTextField1.setEditable(false);
        jTextField4.setEditable(false);
        SimpleDateFormat myDate = new SimpleDateFormat("yyyy/MM/dd");
        Calendar cal = Calendar.getInstance();
        jTextField2.setText(myDate.format(cal.getTime()));
    }
//    String name;
//    String price;
//    String stocks;
//    String scent;
//    
//    public void salesDetails(){
//        jComboBox1.removeAllItems();
//        jTextField4.setText(""); //price
//        jTextField1.setText(""); //quantity or stocks
//        scent=(String)jComboBox3.getSelectedItem();
//        try
//        {
//            ResultSet rs=Select.getData("select name, scent, stocks, price from products where name='"+name+"' and scent='"+scent+"' and price='"+price+"' and stocks > 0");
//            while (rs.next()){
//                jComboBox1.addItem(rs.getString(1));
//            }
//        }
//        catch (Exception e)
//        {
//            JOptionPane.showMessageDialog(null, e);
//        }
//        
//    }
    
    
private void loadProductNamesIntoComboBox() {
    jComboBox1.removeAllItems(); // Clear existing items first

    try {
        ResultSet rs = Select.getData("SELECT name FROM products");
        while (rs.next()) {
            jComboBox1.addItem(rs.getString("name"));
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e);
    }
    
}

//public void salesDetails() {
//    // Clear only the display fields, NOT the combo box options
//    jTextField4.setText("");  // Clear price field
//    jTextField1.setText("");  // Clear stock field
//
//    String name = (String) jComboBox1.getSelectedItem();
//    String scent = (String) jComboBox3.getSelectedItem();
//
//    if (name == null || scent == null) return;
//
//    try {
//        // Corrected SQL condition for stock > 0
//        ResultSet rs = Select.getData("SELECT * FROM products WHERE name = '" + name + "' AND scent = '" + scent + "' AND stocks > 0");
//
//        if (rs.next()) {
//            jComboBox3.setSelectedItem(rs.getString("scent")); // Optional if scent combo box needs to reflect DB value
//            jTextField4.setText(rs.getString("price"));        // Set price field
//            jTextField1.setText(rs.getString("stocks"));       // Set stock field
//        } else {
//            JOptionPane.showMessageDialog(null, "Product not available or out of stock.");
//        }
//
//        rs.close();
//    } catch (Exception e) {
//        JOptionPane.showMessageDialog(null, e);
//    }
//    
//    
//}



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jTextField2 = new javax.swing.JTextField();
        jComboBox3 = new javax.swing.JComboBox<>();
        jTextField4 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        home = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        logout = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setMinimumSize(new java.awt.Dimension(1366, 768));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextField1.setRequestFocusEnabled(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 580, 50, 40));

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 290, 380, 40));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Animal & Co. Cat Litter", "Naughty Tail Cat Litter" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 390, 380, 40));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash", "GCash" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 500, 380, 40));

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 290, 380, 40));

        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 390, 380, 40));

        jTextField4.setRequestFocusEnabled(false);
        jPanel1.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 580, 50, 40));

        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 570, 130, 60));

        home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeMouseClicked(evt);
            }
        });
        jPanel1.add(home, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 70, 80, 80));
        jPanel1.add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 500, 380, 40));

        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
        });
        jPanel1.add(logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 80, 100, 60));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/addSale.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1364, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 770));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
String buyerName = jTextField3.getText();
String quantityStr = jTextField5.getText();
String name = (String) jComboBox1.getSelectedItem();
String scent = (String) jComboBox3.getSelectedItem();
String paymentMode = (String) jComboBox2.getSelectedItem();
String purchaseDate = jTextField2.getText();  // Format: yyyy-MM-dd

try {
    if (!quantityStr.isEmpty()) {
        int quantityBought = Integer.parseInt(quantityStr);

        // 1. Get product details including price
        String query = "SELECT productId, stocks, price FROM products WHERE name = '" + name + "' AND scent = '" + scent + "'";
        ResultSet rs = Select.getData(query);

        if (rs.next()) {
            int productId = rs.getInt("productId");
            int currentStock = rs.getInt("stocks");
            int price = rs.getInt("price");
            int totalSales = quantityBought * price;  // Calculate total sales

            if (currentStock >= quantityBought) {
                // 2. Update product stock
                String updateQuery = "UPDATE products SET stocks = stocks - " + quantityBought + 
                                   " WHERE productId = " + productId;
                InsertUpdateDelete.setData(updateQuery, "");
                
                // 3. Insert into sales table with all correct column names
                String insertQuery = "INSERT INTO sales (buyerName, purchaseDate, productId, " +
                                   "quantityBought, paymentMode, totalSales) VALUES (" +
                                   "'" + buyerName + "', '" + purchaseDate + "', " + productId + 
                                   ", " + quantityBought + ", '" + paymentMode + "', " + totalSales + ")";
                InsertUpdateDelete.setData(insertQuery, "Sale recorded successfully!");

                setVisible(false);
                new addSales_Dashboard().setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Insufficient stock! Available: " + currentStock);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Product not found in database");
        }
    } else {
        JOptionPane.showMessageDialog(null, "Please enter a quantity");
    }
} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(null, "Invalid quantity! Please enter numbers only");
} catch (SQLException e) {
    JOptionPane.showMessageDialog(null, "Database error: " + e.getMessage());
} catch (Exception e) {
    JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
}
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
     //  loadProductNamesIntoComboBox();
      // salesDetails();
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
//     String name = (String) jComboBox1.getSelectedItem();
//    if (name == null) return;
//
//    try {
//        // Load scent, price, and stock of the selected product
//        ResultSet rs = Select.getData("SELECT scent, price, stocks FROM products WHERE name = '" + name + "'");
//        if (rs.next()) {
//            jComboBox3.setSelectedItem(rs.getString("scent")); // scent combo box    // change to your scent JTextField
//            jTextField4.setText(rs.getString("price"));     // change to your price JTextField
//            jTextField1.setText(rs.getString("stocks"));    // change to your stock/quantity JTextField
//        }
//        rs.close();
//    } catch (Exception e) {
//        JOptionPane.showMessageDialog(null, e);
//    }

String name = (String) jComboBox1.getSelectedItem();
    if (name == null) return;

    jComboBox3.removeAllItems(); // Clear old items

    try {
        ResultSet rs = Select.getData("SELECT scent FROM products WHERE name = '" + name + "' AND stocks > 0");
        while (rs.next()) {
            jComboBox3.addItem(rs.getString("scent"));
        }
        rs.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e);
    }

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
  String name = (String) jComboBox1.getSelectedItem();      // product name
    String scent = (String) jComboBox3.getSelectedItem(); // selected scent
    if (name == null || scent == null) return;

    try {
        // Fetch price and stocks based on product name and scent
        ResultSet rs = Select.getData(
            "SELECT price, stocks FROM products WHERE name = '" + name + "' AND scent = '" + scent + "'"
        );
        if (rs.next()) {
            jTextField4.setText(rs.getString("price"));   // update price
            jTextField1.setText(rs.getString("stocks"));  // update stocks
        }
        rs.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e);
    }
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void homeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeMouseClicked
        int a=JOptionPane.showConfirmDialog(null, "Back to Home?", "Select",JOptionPane.YES_NO_CANCEL_OPTION);
        if (a==0){
            dispose();
            new home_Dashboard().setVisible(true);
        }   
    }//GEN-LAST:event_homeMouseClicked

    private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
       int a=JOptionPane.showConfirmDialog(null, "Do you really want to Logout?", "Select",JOptionPane.YES_NO_CANCEL_OPTION);
        if (a==0){
            dispose();
            new loginPage_Dashboard().setVisible(true);
        }   
    }//GEN-LAST:event_logoutMouseClicked

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addSales_Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addSales_Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addSales_Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addSales_Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addSales_Dashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel home;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JLabel logout;
    // End of variables declaration//GEN-END:variables
}
